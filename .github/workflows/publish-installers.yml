---
name: Publish Installers

jobs:
  on:
    workflow_call:
      inputs:
        config-path:
          required: true
          type: string
      secrets:
        token:
          required: true

  publish-windows-msi-to-gcs:
    permissions:
      contents: 'read'
      id-token: 'write'
    runs-on: ubuntu-20.04
    steps:
      - id: google-auth
        name: Google Auth
        if: github.repository_owner == 'pyrsia' && (github.event_name == 'push' || github.event_name == 'release')
        uses: 'google-github-actions/auth@v1'
        with:
          workload_identity_provider: 'projects/679352079717/locations/global/workloadIdentityPools/pyrsia-pool/providers/github-provider'
          service_account: 'pyrsia-ghaction@pyrsia-sandbox.iam.gserviceaccount.com'

      - id: setup-cloud-sdk
        name: Set up Cloud SDK
        if: github.repository_owner == 'pyrsia' && (github.event_name == 'push' || github.event_name == 'release')
        uses: 'google-github-actions/setup-gcloud@v1'

      - id: install-crcmod-gsutil-version-info
        name: 'Install crcmod and gsutil version info'
        if: github.repository_owner == 'pyrsia' && (github.event_name == 'push' || github.event_name == 'release')
        run: |
          pip3 install -U crcmod
          gsutil version -l
          gcloud info
        shell: /bin/zsh -e {0}

      - id: publish-nightly-gcs-repo
        name: Publish Build to NIGHTLY GCS repo
        if: github.repository_owner == 'pyrsia' && (github.event_name == 'push' || github.event_name == 'release')
        run: |
          .github/workflows/windows-installer-upload.sh ${{ github.workspace }}/installers/windows/ ${{ steps.add-fqbvn-and-export.outputs.TAG_NAME }} latest
        shell: /bin/zsh -e {0}

      # Publish stable version of installer archive to cloud bucket
      - id: publish-stable-gcs-repo
        name: Publish Release to STABLE GCS repo
        if: github.repository_owner == 'pyrsia' && github.event_name == 'release'
        run: |
          .github/workflows/windows-installer-upload.sh ${{ github.workspace }}/installers/windows/ ${{ steps.add-fqbvn-and-export.outputs.TAG_NAME }} stable
        shell: /bin/zsh -e {0}
